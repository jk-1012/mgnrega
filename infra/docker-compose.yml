

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mgnrega
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s

  redis:
    image: redis:7
    restart: unless-stopped
    ports:
      - "6379:6379"

  backend:
    build: ../backend
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    volumes:
      - ../backend/app:/app/app

  worker:
    build: ../backend
    command: celery -A app.tasks worker --loglevel=info
    environment:
      - PYTHONPATH=/app
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    volumes:
      - ../backend/app:/app/app

  frontend:
    build: ../frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - .env

  nginx:
    image: nginx:stable
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend

volumes:
  pgdata:
